System Operations - Lab 5: Managing Resources Using Tagging (Linux) - 2.1
==================================================================================================================

Using this command reference. 

==================================================================================================================

1. Locate the section you need. Each section in this file matches a section in the lab instructions.


2. Replace items in angle brackets - [ ] - with appropriate values. For example, in this command you would replace the value - [JobFlowID] - (including the brackets) with the parameter indicated in the lab instructions: 

   elastic-mapreduce --list [JobFlowID]. 

   You can also use find and replace to change bracketed parameters in bulk.

3. Do NOT enable the Word Wrap feature in Windows Notepad or the text editor you use to view this file.



++++1. Managing Resources Using Tags++++


==================================================================================================================
1.2 Find Development Instances for Project
==================================================================================================================

1.2.1 Find all instances in account with a tag named Project, and a value of ERPSystem

aws ec2 describe-instances --filter "Name=tag:Project,Values=ERPSystem"

1.2.2 Limit output of above command to InstanceId

aws ec2 describe-instances --filter "Name=tag:Project,Values=ERPSystem" --query 'Reservations[*].Instances[*].InstanceId'

1.2.3 Include multiple selected values in command output

aws ec2 describe-instances --filter "Name=tag:Project,Values=ERPSystem" --query 'Reservations[*].Instances[*].{ID:InstanceId,AZ:Placement.AvailabilityZone}'

1.2.4 Include the Project tag in the output

aws ec2 describe-instances --filter "Name=tag:Project,Values=ERPSystem" --query 'Reservations[*].Instances[*].{ID:InstanceId,AZ:Placement.AvailabilityZone,Project:Tags[?Key==`Project`] | [0].Value}'

1.2.5 Include the Environment and Version tags in the output 

aws ec2 describe-instances --filter "Name=tag:Project,Values=ERPSystem" --query 'Reservations[*].Instances[*].{ID:InstanceId,AZ:Placement.AvailabilityZone,Project:Tags[?Key==`Project`] | [0].Value,Environment:Tags[?Key==`Environment`] | [0].Value,Version:Tags[?Key==`Version`] | [0].Value}'

1.2.6 Add an additional filter to restrict the return results to instances whose Environment tag is set to development:

aws ec2 describe-instances --filter "Name=tag:Project,Values=ERPSystem" "Name=tag:Environment,Values=development" --query 'Reservations[*].Instances[*].{ID:InstanceId,AZ:Placement.AvailabilityZone,Project:Tags[?Key==`Project`] | [0].Value,Environment:Tags[?Key==`Environment`] | [0].Value,Version:Tags[?Key==`Version`] | [0].Value}'


==================================================================================================================
1.3 Change Version Tag for Development Instances
==================================================================================================================

1.3.3 Run shell script to change Version tag on select instances

./change-resource-tags.sh

1.3. Verify changes

aws ec2 describe-instances --filter "Name=tag:Project,Values=ERPSystem" --query 'Reservations[*].Instances[*].{ID:InstanceId,AZ:Placement.AvailabilityZone,Project:Tags[?Key==`Project`] | [0].Value,Environment:Tags[?Key==`Environment`] | [0].Value,Version:Tags[?Key==`Version`] | [0].Value}'


++++2. Stop and Start Resources by Tag++++


==================================================================================================================
2.2. Stop and Restart ERPProject Development Instances
==================================================================================================================

2.2.1 Stop all development instances for the ERPSystem project

./stopinator.php -t"Project=ERPSystem;Environment=development"

2.2.5 Restart the development instances for the ERPSystem project

./stopinator.php -t"Project=ERPSystem;Environment=development" -s


++++3. Challenge 1 Solution - Terminate Non-Compliant Instances++++

==================================================================================================================
3.3. Run the Script
==================================================================================================================

3.3.4 Run the terminate-instance.php script

./terminate-instances.php -region [region] -subnetid [subnet-id]


Êºè 2013, 2014 Amazon Web Services, Inc. or its affiliates. All rights reserved.
